
Back end:
Spring Boot
Spring MVC (version 5)
Spring Data/Hibernate
Java 8

JUnit

DB storage:
MySQL
MongoDB(3.4)
HDFS

Front end:
Angular 2/4 (May be for Rest approach)
HTML 5
bootstrap
JQuery
Node JS

Security(authentication):
OAuth2/Okta

Dev Ops:
Maven
Jenkins
GitHub

App Server:
jBoss
tomcat

nginx as web server and load balancer

search engine:
ElasticSearch

data Stream service:
Kafka

email service

-----------------------------------------------------------------------------------------------------
Three versions of application will be developed and hosted in to the servers. Need to identify the common
components which will be utilised across all versions.

->Web application using Spring boot,Spring batch, MySQL,Hibernate, Jquery and thymeleaf templates, OAuth2
->Single page application using angular 5, MongoDB,bootstrap, Spring Rest API,Spring Data, OAuth2 with Okta
Note:MongoDB will be connected using Spring Data and MongoConnector both
->Application using node js and mongo DB, Spring Rest API, spring Data, Oauth2 with Okta
Note:MongoDB will be connected using Spring Data and MongoConnector both


JUnit will be used for all type of application

Angular and Node JS application will be deployed in Jboss
Web application will be deployed in Tomcat

All application will be hosted in github.
Web Application will be build based on maven
Angular and Node JS server API will be build based on gradle

Questions:
How to use kafka in the application?
How to use ElasticSearch in the application?
How to use nginx for the application?
Need to identify the layout design to be used in the applications 
Identify common pages for all roles

--------------------------------------------------------------------------------------------------------
Book management system is an web application which will facilitate:

1) Single Sign On: A login page will be presented to login into the System. It is common for all Roles.

2)Onboarding new books to the system: <Role: Admin>
New books will be loaded in to system by 2 ways:
 a) As an CSV file
 b) As an XML file
 c) as a web service hosted as WSDL
 d) loading data from HDFS
 
Constraints:

3)off boarding old books from the system:<Role: Admin>
Books data will be deleted from system based on some conditions.Legacy data will be moved to HDFS

Constraints:

4)user management <Role: Admin,individual User>
Roles:
I)Super user(admin) : Will have access to all the functionalities including 
  ->User creation : 
      a) User can be created by signing into the application by individual and activating account.
      b) Password change facility will be available to each user. Password expiry will be set to 15 days.
      c) A Super user and librarian will be created by default in to DB
  ->book loading into the system <Use case 1>
  ->removing books from the system <Use case 2>
II)Librarian : Will have access to issue the books,book search,print reports
III)Reader: Will have access to check all the issued books details and search function

Constraints:

5)Issuing books to users: <Role: Librarian>
Books will be issued by librarian to the users based on the availibility of book. At max only 5 books can be issued to 
an user for the period of 10 days. An alert(email/message) will be sent to user to return the book on the last day of issue.

Constraints:

6)Submit books to the system:<Role: user, it can be libraian and super user as well>
User loggs in to hte system and clicks on Submit the book. Upon successfully submit, inventory will be updated in the system for the book

Constraints:

7)maintains history/track of issued books to each user: <Role: Librarian,Admin and individual Users>
this is utility where librarian can select the date range and see the details of books issued to different users.

Constraints:

8)implement fine/alert through message or mail: <Role : Librarian>
Every users account will be checked periodically to see the date of returning book and based on that alert will be generated

Constraints:

9)book search <Role : Admin,Librarian and individual User>
This facility will be available to all roles to see the availability of the books in to the system

Constraints:

10)printing reports and PDF for various details:<Role : Admin and Librarian>
Here librarian/admin can print the PDF of books details/inventory/issued books/new books arival/offboarded books based on date range

Constraints:

11)Misc: using google Map API and vedio embeding <Role : ALL>
to be decided

Constraints:

12)Books can be read online as PDF <Role : ALL>
This is an utility where Book can be read as PDF in the system itself.

Constraints:

----------------------------------------------------------------------------------------------------------
Database design
MySQL:
Posible Tables:
1)users <all users details>
2)roles <all roles defined>
3)tbl_books <individual book details>
4)tbl_issued_books_details <issued books details>
5)tbl_books_inventory <count of each book available in the system>
6)tbl_app_properties <common properties like server details, email messages>
7)tbl_users_penalty <maintains penalty for each user>

MongoDB:
1) user
2) roles
3) books <may be containing issued books details and inventory as well as embeded documents>
4) app_properies
5) penalty

HDFS: books data will be kept in HDFS as csv file


----------------------------------------------------------------------------------------------------------



